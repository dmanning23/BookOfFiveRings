
    processor 6502
    include "vcs.h"
    include "macro.h"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Variables segment

    seg.u Variables

counter equ $81

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Code segment

    seg Code
    org $f000

Start
    CLEAN_START ;Macro to initialize several flags and registers, safely clears memory and TIA

;Set the playfield mode to either normal (0) or mirrored (1)
;TODO: move this into the DraBackground routine
    lda #1 ;comment/uncomment to change to normal/mirrored
    sta CTRLPF

NextFrame

    lda #2 ;same as binary #%00000010
    sta VBLANK ;turn on VBLANK
    sta VSYNC ;turn on VSYNC

; 1 + 3 lines of VSYNC
    sta WSYNC ;first scanline
    sta WSYNC ;second scanline
    sta WSYNC ;third scanline
    lda #0
    sta VSYNC ;turn off vsync

; 37 lines of underscan. 
    ldx #37 ;Use the x register to count down the number of scanlines (37)
LVBlank
    sta WSYNC ;wait for the next scanline
    dex ;decremnt x
    bne LVBlank	;lopp while x != 0

; disable VBLANK and release the TIA to generaqte some color
    lda #0
    sta VBLANK

    sta COLUBK ;reset the background color to black to start our new frame
    sta COLUPF ;reset teh foreground color to black to start the new frame
    sta PF0 ;set the pf0 playfield register
    sta PF1 ;set the pf1 playfield register
    sta PF2 ;set the pf2 playfield register
    sta counter

;Draw the 192 scanlines
    ldx #192 ;count 192 lines
    ldy #0 ;load the foreground color into the Y register

LVScan
    sta WSYNC ;wait for the next scanline    

    txa
    cmp #100
    bcc DrawPattern

    ;TODO: move this default sky color to the DrawBackground routine
    lda #$70 ;load the blood red for our foreground color
    sta COLUBK ;set the foreground color
    jmp nextLVScan

;TODO: rename this routine to DrawBackground
DrawPattern

    lda #$70 ;load the blood red for our foreground color
    sta COLUBK ;set the foreground color

    lda #$9E ;load the blood red for our foreground color
    sta COLUPF ;set the foreground color

    lda PFData0,y
    sta PF0

    lda PFData1,y
    sta PF1

    lda PFData2,y
    sta PF2

    lda counter
    cmp #5
    bne IncrementCounter

IncrementY

    iny ;comment/uncomment to scroll color of foreground
    lda #0
    sta counter
    jmp nextLVScan

IncrementCounter

    inc counter
    jmp nextLVScan

nextLVScan

    dex
    bne LVScan

; Reenable VBLANK for bottom (and top of next frame)
    lda #2
    sta VBLANK

; 30 lines of overscan
    ldx #30
LVOver
    sta WSYNC ;wait for next scanline
    dex ;decrement x
    bne LVOver ;loop while x !=0 

;total = 262 lines, go to next frame
    jmp NextFrame

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Epilogue

PFData0
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%11000000
        .byte #%11110000
        .byte #%11110000
        .byte #%11110000

PFData1
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000000
        .byte #%00000001
        .byte #%00000011
        .byte #%00000111
        .byte #%00001111
        .byte #%00011111
        .byte #%01111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111

PFData2
        .byte #%11100000
        .byte #%11111000
        .byte #%11111100
        .byte #%11111110
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111
        .byte #%11111111

    org $fffc
    .word Start	; reset vector
    .word Start	; BRK vector
